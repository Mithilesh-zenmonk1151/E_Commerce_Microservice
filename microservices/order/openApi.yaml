openapi: 3.0.0
info:
  title: Order Service API
  version: 1.0.0
  description: API for managing orders
servers:
  - url: http://localhost:8080/api/v1
paths:
  /orders:
    get:
      tags:
        - "Order"
      summary: Get all orders
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '404': 
          description: 'Not Found'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Order Not found
         
        '500':
           description: Internal server error
           content: 
             application/json:
              schema:
               type: object
               properties:
                 error:
                  type: string

             


               
                    
    post:
      tags: 
        - "Order"
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrder'
      responses:
        '201':
          description: The created order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
         description: All Fields are required
        '500':
          description: Intarnal server error
          content:
            application/json:
              schema:
               type: object
               properties:
                 error:
                  type: string         
  /orders/{orderId}:
    parameters:
      - name: orderId
        in: path
        description: ID of the order
        required: true
        schema:
          type: integer
    get:
      tags: 
        - "Order"
      summary: Get an order by ID
      responses:
        '200':
          description: The order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404': 
          description: 'Order not'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Order Not found
                    
        '500':
          description: Intarnal server error
          content:
            application/json:
              schema:
               type: object
               properties:
                 error:
                  type: string     
        '400':
           description: Invalid request payload
           content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The provided orderId is not valid, 1234                

                 
    put:
      tags: 
        - "Order"
      summary: Update an existing order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: The updated order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Order not found
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The provided orderId is not valid, 1234
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error                 
    delete:
      tags: 
        - "Order"
      summary: Delete an order
      requestBody:
        required: true
        content:
         application/json:
          schema:
           $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order deleted successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: order not found
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: The provided oredrId is not valid.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error  
components:
  schemas:
    NewOrder:
      type: object
      properties:
        ProductName:
          type: string
        quantity:
          type: integer
      required: 
       - ProductName
       - quantity


    Order:
      allOf:
        - type: object
          properties:
            id:
              type: integer
        - $ref: "#/components/schemas/NewOrder"

      required:
        - id

              
